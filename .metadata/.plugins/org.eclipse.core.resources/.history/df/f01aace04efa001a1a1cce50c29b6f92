package com.restaurant.payBox.REST;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.info.ProjectInfoProperties.Build;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.restaurant.payBox.dao.ATM_DAO;
import com.restaurant.payBox.dao.BillDAO;
import com.restaurant.payBox.dao.OrderClientDAO;
import com.restaurant.payBox.entity.ATM;
import com.restaurant.payBox.entity.Bill;
import com.restaurant.payBox.entity.Client;
import com.restaurant.payBox.entity.OrderClient;
import com.restaurant.payBox.entity.TypeBill;
import com.restaurant.payBox.entity.TypePayment;
import com.restaurant.payBox.entity.WorkingDay;

@RestController
@RequestMapping("payBox")
public class PayBoxREST {
	
	@Autowired
	private ATM_DAO atmDAO;
	private BillDAO billDAO;
	private OrderClientDAO orderClientDAO;
	
	/**
	 * Este metodo me crea el cajero del restaurante con su jornada de trabajo
	 * @return
	 */
	@GetMapping
	public ResponseEntity<ATM> createATM() {
		ATM atm = new ATM();
		atm.setIdAtm(1);
		atm.setOccupied(false);
		atm.setWorkingDay(new WorkingDay(1,28800, 600,7200));
		atmDAO.save(atm);
		return ResponseEntity.ok(atm);	
	}
	
	public ResponseEntity<OrderClient> createOrdenerClient() {
		OrderClient orderClient = new OrderClient();
		orderClient.setIdOrderClient(1);
		orderClient.setTypeBill(TypeBill.PERSON_PAYMENT);
//		orderClient.setPlateList(plateList);
		orderClient.setQualificationPlate(5);
		orderClient.setQualificationWaiter(2);
//		orderClient.setWaiter(waiter);
		orderClient.setTypePayment(TypePayment.CASH_PAYMENT);
//		orderClient.setBill(new Bill(1, orderClient.getTypeBill(), orderClient.getTypePayment(), true, 1200, orderClientList));
		orderClient.setClient(new Client(1));
		return ResponseEntity.ok(orderClient);
	}

}
